/*
输入格式
输入数据共两行，第一行包含两个自然数 n (1≤n≤100) 和 k (0≤k<n)，第二行包含 k 个自然数 Xi (1≤Xi≤n)，数字之间用一个空格隔开，表示损坏的台阶的序号（从楼梯底部到楼梯顶部，台阶序号依次为 1 到 n）。

输出格式
输出数据仅包含一个整数，表示所有可行走法的总数。
*/
//斐波那契改版题。
#include<iostream>
using namespace std;

int main()
{
	int m, n;
	int a[105][2] = { 0 };
	cin >> m >> n;

	for (int i = 0; i < n; i++)
	{
		int t;
		cin >> t;
		a[t][1] = -1;
	}

	if (a[1][1] == -1)
		a[1][0] = 0;
	else
		a[1][0] = 1;

	if (a[2][1] == -1)
		a[2][0] = 0;
	else if (a[1][1] == -1)
		a[2][0] = 1;
	else
		a[2][0] = 2;

	if (a[3][1] == -1)
		a[3][0] = 0;
	else if (a[1][1] == -1 && a[2][1] == -1)
		a[3][0] = 1;
	else if (a[1][1] == -1)
		a[3][0] = 2;
	else if (a[2][1] == -1)
		a[3][0] = 2;
	else
		a[3][0] = 4;

	for (int i = 4; i <= m; i++)
	{
		if (a[i][1] != -1)
			a[i][0] = a[i - 1][0] + a[i - 2][0] + a[i - 3][0];
		else
			a[i][0] = 0;
	}

	cout << a[m][0];

	return 0;
		
}